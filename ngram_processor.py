#!/usr/bin/env python


"""
4gram Hex code processor
Takes in malware.bytes files 
from either 'train' or 'test'
and pickle/saves dumps stats
to processed_features/ngrams folder
"""


import glob
import pickle
import os
import sys
import time
from joblib import Parallel, delayed

import config as CFG


print('[[[ starting n-gram extractor ]]]')


if sys.argv[1]=='train':
    input_directory = CFG.training_data_directory_path + '*.bytes'
elif sys.argv[1]=='test':
    input_directory = CFG.testing_data_directory_path + '*.bytes'
else:
    print('Usage: python 4gram_bytes_extractor.py train 4')
    sys.exit()

ngram_window = int(sys.argv[2])

out_dir = set_up.feats_folder_path + '{}gr/'.format(ngram_window)
if not os.path.exists(out_dir):
    os.makedirs(out_dir)

files = glob.glob(input_dir)


def get_dict():
    d = {format(key, '02X'): key for key in range(256)}
    d['??'] = 256
    return d


def indexer4gr(tokens):
    return tokens[0]*16974593 + tokens[1]*66049 + tokens[2]*257 + tokens[3]


def count_4f(all_hex_codes, ng_count):
    counts_4g = {}
    if ng_count == 4:
        indexer = indexer4gr
    else:
        print('4gram implemented only')
    for i in range(len(all_hex_codes)-ng_count+1):
        index = indexer(all_hex_codes[i:i+ng_count])
        counts_4g[index] = counts_4g.get(index,0)+1
    ptr = []
    vals = []
    for key in counts_4g:
        ptr.append(key)
        vals.append(counts_4g[key])
    return (ptr, vals)


def extract_4g (filename, ng_window):
        convert_dict = get_dict()
        print("*********** extracting ***************")
        print(filename)
        with open(filename,'r') as f:
            text = f.read()
        lines = text.split('\r\n')
        all_hex_codes = []
        for l in lines:
            elems = l.split(' ')
            # all hex normalized to value between 0-256
            all_hex_codes.extend([convert_dict[x] for x in elems[1:]])

        print("*********** saving data ***************")
        print(out_dir + filename.split('/')[-1])
        print("***************************************")
        with open(out_dir + filename.split('/')[-1],'w') as f_dump:
            pickle.dump(count_4f(all_hex_codes,ng_window),f_dump)


Parallel(n_jobs=-1)(delayed(extract_4g)(i, ngram_window) for i in files)
print('Done - n-gram extractor')
